location = /ftp {
    return 301 /ftp/;
}

location ^~ /ftp {
    root {GUI_PUBLIC_DIR}/tools;
    index index.php;

    rewrite ^/ftp/(?:dashboard|settings|welcome|ws-) /ftp/index.php last;

    if ( !-e $request_filename ) {
        # WebDAV Rewrites
        rewrite ^/ftp/shares /ftp/dav.php last;
        # Sync client
        rewrite ^/ftp/api /ftp/rest.php last;
        # External users
        rewrite ^/ftp/user ./ftp/index.php?get_action=user_access_point last;
        # Public shares
        rewrite ^/ftp/data/public/([a-zA-Z0-9_-]+)\.php$ /ftp/data/public/share.php?hash=$1?;
    }

    rewrite ^/ftp/data/public/([a-zA-Z0-9_-]+)--([a-z]+)$ /ftp/data/public/share.php?hash=$1&lang=$2?;
    rewrite ^/ftp/data/public/([a-zA-Z0-9_-]+)$ /ftp/data/public/share.php?hash=$1?;

    # Prevent Clickjacking
    add_header X-Frame-Options "SAMEORIGIN";

    # Only allow these request methods and do not accept DELETE, SEARCH and other methods
    if ( $request_method !~ ^(GET|HEAD|POST|PROPFIND|OPTIONS)$ ) {
        return 444;
    }

    # Deny access to some directories and files
    location ~* ^/ftp/(?:\.|conf|data/(?:files|personal|logs|plugins|tmp|cache)|plugins/editor.zoho/agent/files) {
        deny all;
    }

    # Enables PHP
    location ~ \.php$ {
        include imscp_fastcgi.conf;
    }

    # Enables Caching
    location ~* \.(ico|css|js)$ {
        expires 7d;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }
}
